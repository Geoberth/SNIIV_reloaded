@{
    ViewData["Title"] = "Metas";
    List<SelectListItem> anios_conavi = (List<SelectListItem>)ViewBag.anios_conavi;
    List<SelectListItem> anios_fovissste = (List<SelectListItem>)ViewBag.anios_fovissste;
    List<SelectListItem> anios_infonavit = (List<SelectListItem>)ViewBag.anios_infonavit;
}

@section Scripts
{
    <script src="~/js/util.js" type="text/javascript"></script>
    <script src="~/js/functions.js" type="text/javascript"></script>
    <!-- ECharts -->
    <link href="~/css/echarts.css" rel="stylesheet" type="text/css" />
    <script src="~/js/echarts/echarts-all-3.js" type="text/javascript"></script>
    <!-- LINQ -->
    <script src="~/js/linq.min.js" type="text/javascript"></script>
    <!-- DC -->
    <script src="~/js/dc/d3.js" type="text/javascript"></script>
    <!-- DataTables -->
    <link href="/js/datatable2/datatables.min.css" rel="stylesheet" type="text/css" />
    <script src="~/js/datatable2/datatables.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var countC, countF, countI;
        var format_acciones = ',.0f';
        var format_monto = ',.2f';
        $(function () {
            countC = 0;
            countF = 0;
            countI = 0;

            $('#tabC a').click(function (e) {
                e.preventDefault();
                if (countC < 1)
                    iniciarConavi();
                countC++;
            });
            $('#tabF a').click(function (e) {
                e.preventDefault();
                if (countF < 1)
                    iniciarFovissste();
                countF++;
            });
            $('#tabI a').click(function (e) {
                e.preventDefault();
                if (countI < 1)
                    iniciarInfonavit();
                countI++;
            });

            $('[id$=ddl_anio_c]').change(function () {
                iniciarConavi();
            });
            $('[id$=ddl_anio_f]').change(function () {
                iniciarFovissste();
            });
            $('[id$=ddl_anio_i]').change(function () {
                iniciarInfonavit();
            });

            $('.tab-active').addClass('active');
            $('#tabC a').click();
        });

        var jsonC, jsonF, jsonI, metrica, isMonto, anio,
            barChartConavi,
            gaugeChartConavi,
            barChartFovissste,
            gaugeChartFovissste,
            barChartInfonavit,
            gaugeChartInfonavit,
            lst,
            meses,
            estados = [],
            series,
            sum_col,
            arrayPorcentaje = [],
            arrayValor = [],
            avance, meta, porcentaje;
        var toolbox = {
            show: true,
            orient: 'vertical',
            left: 'right',
            top: 'center',
            showTitle: false,
            feature: {
                restore: { show: true },
                saveAsImage: { show: true }
            }
        };
        var columns, columnsHidden;

        //#region CONAVI

        function iniciarConavi() {
            barChartConavi = echarts.init($('#barChartConavi')[0]);
            gaugeChartConavi = echarts.init($('#gaugeChartConavi')[0]);

            anio = $('[id$=ddl_anio_c]').val();
            $('#lbl_c').text(anio);
            $.get(path + 'DashboardAPI/getMetasConavi/' + anio).done(function (obj) {
                jsonC = obj;
                mostrarConavi();
            });
        }

        function mostrarConavi() {
            metrica = $("input:radio[name='chk_metrica_c']:checked").val();
            isMonto = metrica === 'monto' ? true : false;

            lst = Enumerable.From(jsonC).OrderBy("$.clave_estado");
            estados = lst.Select(p => p.estado).ToArray();
            console.log(estados);
            series = [];
            columns = [];
            columnsHidden = [];
            avance = 0;
            columns.push({ data: 'estado' });
            meses = ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'];
            $.each(meses, function (index, value) {
                sum_col = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray().reduce((a, b) => a + b, 0) : lst.Select('p => p.' + value + '_acciones').ToArray().reduce((a, b) => a + b, 0);
                if (sum_col != 0) {
                    arrayPorcentaje = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray() : lst.Select('p => p.' + value + '_acciones').ToArray();
                    arrayValor = isMonto ? lst.Select('p => p.' + value + 'Monto').ToArray() : lst.Select('p => p.' + value + 'Acciones').ToArray();
                    series.push({
                        name: value,
                        type: 'bar',
                        stack: 'meta',
                        data: arrayPorcentaje
                    });
                    avance += arrayValor.reduce((a, b) => a + b, 0);
                }
                else {
                    columnsHidden.push({
                        targets: [index + 1],
                        visible: false,
                        searchable: false
                    });
                }
                columns.push({ data: value + (isMonto ? 'Monto' : 'Acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            });
            series.push({
                name: 'pendiente',
                type: 'bar',
                itemStyle: {
                    normal: { shadowColor: 'rgba(0, 0, 0, 0.5)', shadowBlur: 10 }
                },
                stack: 'meta',
                data: isMonto ? lst.Select(p => p.restante_monto).ToArray() : lst.Select(p => p.restante_acciones).ToArray(),
                label: {
                    normal: { show: true, position: 'insideRight', formatter: '{c}%' }
                }
            });
            columns.push({ data: (isMonto ? 'total_monto' : 'total_acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            meta = isMonto ? lst.Select(p => p.total_monto).ToArray().reduce((a, b) => a + b, 0) : lst.Select(p => p.total_acciones).ToArray().reduce((a, b) => a + b, 0);
            porcentaje = ((avance * 100) / meta).toFixed(2);
            $('#lbl_avance_c').text((isMonto ? '$' : '') + addCommas(avance.toFixed(0)) + ' / ' + (isMonto ? '$' : '') + addCommas(meta.toFixed(0)));

            gaugeChartConavi.setOption({
                tooltip: {
                    formatter: "{a} <br/>{b} : {c}%"
                },
                toolbox: toolbox,
                series: [
                    {
                        name: (isMonto ? 'Monto' : 'Acciones'),
                        type: 'gauge',
                        detail: { formatter: '{value}%' },
                        axisLine: {
                            lineStyle: {
                                color: [[0.2, '#BB1B3D'], [0.8, '#EAB25B'], [1, '#497866']]
                            }
                        },
                        data: [{ value: porcentaje, name: 'Avance' }]
                    }
                ]
            }, true);

            meses.push('pendiente');
            barChartConavi.setOption({
                color: baseColor,
                tooltip: { formatter: '{a}<br />{b}: {c}%' },
                toolbox: toolbox,
                legend: {
                    data: meses
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value} %'
                    },
                    max: 100,
                },
                yAxis: {
                    type: 'category',
                    inverse: true,
                    data: estados
                },
                series: series
            }, true);

            renderChartsConavi();
            showTableConavi(lst.ToArray(), columns, columnsHidden);
        }

        function showTableConavi(data, cols, colsHidden) {
            var table = $('#tableC').DataTable({
                data: data,
                columns: cols,
                columnDefs: colsHidden,
                destroy: true,
                paging: false,
                ordering: false,
                info: false,
                buttons: ['excel']
            });
            table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
        }

        function renderChartsConavi() {
            barChartConavi.resize();
            gaugeChartConavi.resize();
        }

        //#endregion

        //#region FOVISSSTE

        function iniciarFovissste() {
            barChartFovissste = echarts.init($('#barChartFovissste')[0]);
            gaugeChartFovissste = echarts.init($('#gaugeChartFovissste')[0]);

            anio = $('[id$=ddl_anio_f]').val();
            $('#lbl_f').text(anio);
            $.get(path + 'DashboardAPI/getMetasFovissste/' + anio).done(function (obj) {
                jsonF = obj;
                mostrarFovissste();
            });
        }

        function mostrarFovissste() {
            metrica = $("input:radio[name='chk_metrica_f']:checked").val();
            isMonto = metrica === 'monto' ? true : false;

            lst = Enumerable.From(jsonF).OrderBy("$.clave_estado");
            estados = lst.Select(p => p.estado).ToArray();
            series = [];
            columns = [];
            columnsHidden = [];
            avance = 0;
            columns.push({ data: 'estado' });
            meses = ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'];
            $.each(meses, function (index, value) {
                sum_col = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray().reduce((a, b) => a + b, 0) : lst.Select('p => p.' + value + '_acciones').ToArray().reduce((a, b) => a + b, 0);
                if (sum_col != 0) {
                    arrayPorcentaje = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray() : lst.Select('p => p.' + value + '_acciones').ToArray();
                    arrayValor = isMonto ? lst.Select('p => p.' + value + 'Monto').ToArray() : lst.Select('p => p.' + value + 'Acciones').ToArray();
                    series.push({
                        name: value,
                        type: 'bar',
                        stack: 'meta',
                        data: arrayPorcentaje
                    });
                    avance += arrayValor.reduce((a, b) => a + b, 0);
                }
                else {
                    columnsHidden.push({
                        targets: [index + 1],
                        visible: false,
                        searchable: false
                    });
                }
                columns.push({ data: value + (isMonto ? 'Monto' : 'Acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            });
            series.push({
                name: 'pendiente',
                type: 'bar',
                itemStyle: {
                    normal: { shadowColor: 'rgba(0, 0, 0, 0.5)', shadowBlur: 10 }
                },
                stack: 'meta',
                data: isMonto ? lst.Select(p => p.restante_monto).ToArray() : lst.Select(p => p.restante_acciones).ToArray(),
                label: {
                    normal: { show: true, position: 'insideRight', formatter: '{c}%' }
                }
            });
            columns.push({ data: (isMonto ? 'total_monto' : 'total_acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            meta = isMonto ? lst.Select(p => p.total_monto).ToArray().reduce((a, b) => a + b, 0) : lst.Select(p => p.total_acciones).ToArray().reduce((a, b) => a + b, 0);
            porcentaje = ((avance * 100) / meta).toFixed(2);
            $('#lbl_avance_f').text((isMonto ? '$' : '') + addCommas(avance.toFixed(0)) + ' / ' + (isMonto ? '$' : '') + addCommas(meta.toFixed(0)));

            gaugeChartFovissste.setOption({
                tooltip: {
                    formatter: "{a} <br/>{b} : {c}%"
                },
                toolbox: toolbox,
                series: [
                    {
                        name: (isMonto ? 'Monto' : 'Acciones'),
                        type: 'gauge',
                        detail: { formatter: '{value}%' },
                        axisLine: {
                            lineStyle: {
                                color: [[0.2, '#BB1B3D'], [0.8, '#EAB25B'], [1, '#497866']]
                            }
                        },
                        data: [{ value: porcentaje, name: 'Avance' }]
                    }
                ]
            }, true);

            meses.push('pendiente');
            barChartFovissste.setOption({
                color: baseColor,
                tooltip: { formatter: '{a}<br />{b}: {c}%' },
                toolbox: toolbox,
                legend: {
                    data: meses
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value} %'
                    },
                    max: 100,
                },
                yAxis: {
                    type: 'category',
                    inverse: true,
                    data: estados
                },
                series: series
            }, true);

            renderChartsFovissste();
            showTableFovissste(lst.ToArray(), columns, columnsHidden);
        }

        function showTableFovissste(data, cols, colsHidden) {
            var table = $('#tableF').DataTable({
                data: data,
                columns: cols,
                columnDefs: colsHidden,
                destroy: true,
                paging: false,
                ordering: false,
                info: false,
                buttons: ['excel']
            });
            table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
        }

        function renderChartsFovissste() {
            barChartFovissste.resize();
            gaugeChartFovissste.resize();
        }

        //#endregion

        //#region INFONAVIT

        function iniciarInfonavit() {
            barChartInfonavit = echarts.init($('#barChartInfonavit')[0]);
            gaugeChartInfonavit = echarts.init($('#gaugeChartInfonavit')[0]);

            anio = $('[id$=ddl_anio_i]').val();
            $('#lbl_i').text(anio);
            $.get(path + 'DashboardAPI/getMetasInfonavit/' + anio).done(function (obj) {
                jsonI = obj;
                mostrarInfonavit();
            });
        }

        function mostrarInfonavit() {
            metrica = $("input:radio[name='chk_metrica_i']:checked").val();
            isMonto = metrica === 'monto' ? true : false;

            lst = Enumerable.From(jsonI).OrderBy("$.clave_estado");
            estados = lst.Select(p => p.estado).ToArray();
            series = [];
            columns = [];
            columnsHidden = [];
            avance = 0;
            columns.push({ data: 'estado' });
            meses = ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'];
            $.each(meses, function (index, value) {
                sum_col = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray().reduce((a, b) => a + b, 0) : lst.Select('p => p.' + value + '_acciones').ToArray().reduce((a, b) => a + b, 0);
                if (sum_col != 0) {
                    arrayPorcentaje = isMonto ? lst.Select('p => p.' + value + '_monto').ToArray() : lst.Select('p => p.' + value + '_acciones').ToArray();
                    arrayValor = isMonto ? lst.Select('p => p.' + value + 'Monto').ToArray() : lst.Select('p => p.' + value + 'Acciones').ToArray();
                    series.push({
                        name: value,
                        type: 'bar',
                        stack: 'meta',
                        data: arrayPorcentaje
                    });
                    avance += arrayValor.reduce((a, b) => a + b, 0);
                }
                else {
                    columnsHidden.push({
                        targets: [index + 1],
                        visible: false,
                        searchable: false
                    });
                }
                columns.push({ data: value + (isMonto ? 'Monto' : 'Acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            });
            series.push({
                name: 'pendiente',
                type: 'bar',
                itemStyle: {
                    normal: { shadowColor: 'rgba(0, 0, 0, 0.5)', shadowBlur: 10 }
                },
                stack: 'meta',
                data: isMonto ? lst.Select(p => p.restante_monto).ToArray() : lst.Select(p => p.restante_acciones).ToArray(),
                label: {
                    normal: { show: true, position: 'insideRight', formatter: '{c}%' }
                }
            });
            columns.push({ data: (isMonto ? 'total_monto' : 'total_acciones'), render: function (data) { return d3.format(isMonto ? format_monto : format_acciones)(data); } });
            meta = isMonto ? lst.Select(p => p.total_monto).ToArray().reduce((a, b) => a + b, 0) : lst.Select(p => p.total_acciones).ToArray().reduce((a, b) => a + b, 0);
            porcentaje = ((avance * 100) / meta).toFixed(2);
            $('#lbl_avance_i').text((isMonto ? '$' : '') + addCommas(avance.toFixed(0)) + ' / ' + (isMonto ? '$' : '') + addCommas(meta.toFixed(0)));

            gaugeChartInfonavit.setOption({
                tooltip: {
                    formatter: "{a} <br/>{b} : {c}%"
                },
                toolbox: toolbox,
                series: [
                    {
                        name: (isMonto ? 'Monto' : 'Acciones'),
                        type: 'gauge',
                        detail: { formatter: '{value}%' },
                        axisLine: {
                            lineStyle: {
                                color: [[0.2, '#BB1B3D'], [0.8, '#EAB25B'], [1, '#497866']]
                            }
                        },
                        data: [{ value: porcentaje, name: 'Avance' }]
                    }
                ]
            }, true);

            meses.push('pendiente');
            barChartInfonavit.setOption({
                color: baseColor,
                tooltip: { formatter: '{a}<br />{b}: {c}%' },
                toolbox: toolbox,
                legend: {
                    data: meses
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'value',
                    axisLabel: {
                        formatter: '{value} %'
                    },
                    max: 100,
                },
                yAxis: {
                    type: 'category',
                    inverse: true,
                    data: estados
                },
                series: series
            }, true);

            renderChartsInfonavit();
            showTableInfonavit(lst.ToArray(), columns, columnsHidden);
        }

        function showTableInfonavit(data, cols, colsHidden) {
            var table = $('#tableI').DataTable({
                data: data,
                columns: cols,
                columnDefs: colsHidden,
                destroy: true,
                paging: false,
                ordering: false,
                info: false,
                buttons: ['excel']
            });
            table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
        }

        function renderChartsInfonavit() {
            barChartInfonavit.resize();
            gaugeChartInfonavit.resize();
        }

        //#endregion
    </script>
}

<br />
<div id="tabs">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li id="tabC" role="presentation" class="tab-active"><a href="#lnk_c" aria-controls="lnk_c" role="tab" data-toggle="tab">CONAVI</a></li>
        <li id="tabF" role="presentation"><a href="#lnk_f" aria-controls="lnk_f" role="tab" data-toggle="tab">FOVISSSTE</a></li>
        <li id="tabI" role="presentation"><a href="#lnk_i" aria-controls="lnk_i" role="tab" data-toggle="tab">INFONAVIT</a></li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="lnk_c">
            <div class="page-header">
                <h2>CONAVI <small>Avance mensual con respecto a la meta <span id="lbl_c"></span></small></h2>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <h3>Total</h3>
                    <div id="gaugeChartConavi" class="chart"></div>
                    <div align="center">
                        <h4><strong><span id="lbl_avance_c"></span></strong></h4>
                    </div>
                    <br />
                    <div class="btn-group btn-group-justified" data-toggle="buttons">
                        <label class="btn btn-default active">
                            <input type="radio" name="chk_metrica_c" value="acciones" autocomplete="off" onchange="mostrarConavi()" checked>
                            Acciones
                        </label>
                        <label class="btn btn-default">
                            <input type="radio" name="chk_metrica_c" value="monto" autocomplete="off" onchange="mostrarConavi()">
                            Monto
                        </label>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.DropDownList("ddl_anio_c", anios_conavi, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-8">
                    <h3>Estado</h3>
                    <div id="barChartConavi" class="chart3"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table id="tableC" class="table table-condensed table-bordered table-hover" style="width: 100%">
                            <thead>
                                <tr>
                                    <th>Estado</th>
                                    <th>Enero</th>
                                    <th>Febrero</th>
                                    <th>Marzo</th>
                                    <th>Abril</th>
                                    <th>Mayo</th>
                                    <th>Junio</th>
                                    <th>Julio</th>
                                    <th>Agosto</th>
                                    <th>Septiembre</th>
                                    <th>Octubre</th>
                                    <th>Noviembre</th>
                                    <th>Diciembre</th>
                                    <th>Meta</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>

            <div id="info" class="row">
                <div class="col-md-12">
                    <div class="panel-group" role="tablist">
                        <div class="panel panel-info">
                            <div class="panel-heading" role="tab" id="collapseListGroupHeading1">
                                <h4 class="panel-title">
                                    <a href="#collapseListGroup1" class="" role="button" data-toggle="collapse" aria-expanded="true" aria-controls="collapseListGroup1">
                                        <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>Notas
                                    </a>
                                </h4>
                            </div>
                            <div class="panel-collapse collapse in" role="tabpanel" id="collapseListGroup1" aria-labelledby="collapseListGroupHeading1" aria-expanded="true" style="">
                                <ul id="notes" class="list-group">
                                    <li class="list-group-item">
                                        <p class="text-info">Se incluyen todos los programas CONAVI</p>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane" id="lnk_f">
            <div class="page-header">
                <h2>FOVISSSTE <small>Avance mensual con respecto a la meta <span id="lbl_f"></span></small></h2>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <h3>Total</h3>
                    <div id="gaugeChartFovissste" class="chart"></div>
                    <div align="center">
                        <h4><strong><span id="lbl_avance_f"></span></strong></h4>
                    </div>
                    <br />
                    <div class="btn-group btn-group-justified" data-toggle="buttons">
                        <label class="btn btn-default active">
                            <input type="radio" name="chk_metrica_f" value="acciones" autocomplete="off" onchange="mostrarFovissste()" checked>
                            Acciones
                        </label>
                        <label class="btn btn-default">
                            <input type="radio" name="chk_metrica_f" value="monto" autocomplete="off" onchange="mostrarFovissste()">
                            Monto
                        </label>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.DropDownList("ddl_anio_f", anios_fovissste, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-8">
                    <h3>Estado</h3>
                    <div id="barChartFovissste" class="chart3"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table id="tableF" class="table table-condensed table-bordered table-hover" style="width: 100%">
                            <thead>
                                <tr>
                                    <th>Estado</th>
                                    <th>Enero</th>
                                    <th>Febrero</th>
                                    <th>Marzo</th>
                                    <th>Abril</th>
                                    <th>Mayo</th>
                                    <th>Junio</th>
                                    <th>Julio</th>
                                    <th>Agosto</th>
                                    <th>Septiembre</th>
                                    <th>Octubre</th>
                                    <th>Noviembre</th>
                                    <th>Diciembre</th>
                                    <th>Meta</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane" id="lnk_i">
            <div class="page-header">
                <h2>INFONAVIT <small>Avance mensual con respecto a la meta <span id="lbl_i"></span></small></h2>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <h3>Total <small>Créditos hipotecarios más mejoramientos</small></h3>
                    <div id="gaugeChartInfonavit" class="chart"></div>
                    <div align="center">
                        <h4><strong><span id="lbl_avance_i"></span></strong></h4>
                    </div>
                    <br />
                    <div class="btn-group btn-group-justified" data-toggle="buttons">
                        <label class="btn btn-default active">
                            <input type="radio" name="chk_metrica_i" value="acciones" autocomplete="off" onchange="mostrarInfonavit()" checked>
                            Acciones
                        </label>
                        <label class="btn btn-default">
                            <input type="radio" name="chk_metrica_i" value="monto" autocomplete="off" onchange="mostrarInfonavit()">
                            Monto
                        </label>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.DropDownList("ddl_anio_i", anios_infonavit, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-8">
                    <h3>Estado</h3>
                    <div id="barChartInfonavit" class="chart3"></div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table id="tableI" class="table table-condensed table-bordered table-hover" style="width: 100%">
                            <thead>
                                <tr>
                                    <th>Estado</th>
                                    <th>Enero</th>
                                    <th>Febrero</th>
                                    <th>Marzo</th>
                                    <th>Abril</th>
                                    <th>Mayo</th>
                                    <th>Junio</th>
                                    <th>Julio</th>
                                    <th>Agosto</th>
                                    <th>Septiembre</th>
                                    <th>Octubre</th>
                                    <th>Noviembre</th>
                                    <th>Diciembre</th>
                                    <th>Meta</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="panel-group" role="tablist">
                        <div class="panel panel-info">
                            <div class="panel-heading" role="tab" id="collapseListGroupHeading2">
                                <h4 class="panel-title">
                                    <a href="#collapseListGroup2" class="" role="button" data-toggle="collapse" aria-expanded="true" aria-controls="collapseListGroup2">
                                        <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>Notas
                                    </a>
                                </h4>
                            </div>
                            <div class="panel-collapse collapse in" role="tabpanel" id="collapseListGroup2" aria-labelledby="collapseListGroupHeading2" aria-expanded="true" style="">
                                <ul class="list-group">
                                    <li class="list-group-item">
                                        <p class="text-info"><strong>Derrama Infonavit: </strong>Son recursos que aplica el Infonavit. Incluye el monto de crédito, la subcuenta de vivienda y el ahorro voluntario.</p>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
