@{
    ViewData["Title"] = "Días de inventario";
    List<SelectListItem> anios = (List<SelectListItem>)ViewBag.anios;
    List<SelectListItem> trimestres = (List<SelectListItem>)ViewBag.trimestres;
}

@section Scripts{
    <!-- DataTables -->
    <link href="~/js/datatable2/datatables.min.css" rel="stylesheet" type="text/css" />
    <script src="~/js/datatable2/datatables.min.js" type="text/javascript"></script>

    <!-- ECharts -->
    <link href="~/css/echarts.css" rel="stylesheet" type="text/css" />
    <script src="~/js/echarts/echarts.js" type="text/javascript"></script>

    <script src="~/js/util.js" type="text/javascript"></script>
    <script src="~/js/data.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("#btn_aceptar").click(function () {
                createHousingDias();
            });
            $('[id$=ddl_anio]').change(async function () {
                var anio = $('#ddl_anio').val();
                var trimestre = await mostrarTrimestre();
                createHousingDias(anio, trimestre);
            });

            $('[id$=ddl_trimestre]').change(function () {
                var anio = $('#ddl_anio').val();
                var trimestre = $('#ddl_trimestre').val();
                createHousingDias(anio, trimestre);
            });
            createHousingDias();
            /*$('#mdl').on('shown.bs.modal', function (event) {
                var lnk = event.relatedTarget;
                var nombre_estado = lnk.innerText;
                var clave_estado = lnk.id;
                var modal = $(this);
                modal.find('.modal-title').text(nombre_estado);
                createHousingDias2(clave_estado);
            });*/
        });

        function showModal(clave_estado, nombre_estado) {
            changeTitle(nombre_estado);
            createHousingDias2(clave_estado);
            $('#mdl').modal();
        }

        async function mostrarTrimestre() {
            anio = $('#ddl_anio').val();
            var data = await $.getJSON(path + 'CatalogoAPI/GetTrimestreInventario/' + anio, function (json) {
                $('#ddl_trimestre').empty();
                $.each(json, function (key, obj) {
                    $('#ddl_trimestre').append($('<option></option>').attr('value', obj.id).text(obj.descripcion));
                });
            });
            return data[0].id;
            //$('#ddl_trimestre').trigger('change');
        }

        function createHousingDias(anio_v,trim_v) {
            var anio = (anio_v != undefined) ? anio_v :$('[id$=ddl_anio]').val();
            var trimestre = (trim_v != undefined) ? trim_v :$('[id$=ddl_trimestre]').val();
            $.getJSON(path + 'OfertaAPI/GetInventarioEstatal/' + anio + '/' + trimestre, function (data) {
                var columns = [
                    {
                        'data': 'entidad',
                        'render': function (data, type, row) {
                            if (type === 'display') {
                                data = '<a id="' + row.clave_entidad_federativa + '" onclick="showModal(\'' + row.clave_entidad_federativa + '\', \'' + data + '\')" href="#">' + data + '</a>'; //data-toggle="modal" data-target="#mdl"
                            }
                            return data;
                        }
                    },
                    { 'data': 'registro', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'construccion', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'venta', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'total', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'numero_vivienda', render: function (data, type, row) { return addCommas(data); } }
                ];
                var dataMap = data.map(x => ({ id: x.clave_entidad_federativa, name: x.entidad, value: x.total }));
                showTable(data, columns);
                showMap(dataMap);
            });
        }
        function showTable(data, columns) {
            var anio = $('[id$=ddl_anio]').val();
            var trimestre = $('[id$=ddl_trimestre]').val();
            var table = $('#table').DataTable({
                data: data,
                columns: columns,
                destroy: true,
                scrollY: '770px',
                scrollCollapse: true,
                paging: false,
                info: false,
                buttons: buttons,
                scrollX: true,
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    //Update footer
                    $.getJSON(path + 'OfertaAPI/GetTotalInventarioEstatal/' + anio + '/' + trimestre, function (json) {
                        $(api.column(1).footer()).html(addCommas(json.registro));
                        $(api.column(2).footer()).html(addCommas(json.construccion));
                        $(api.column(3).footer()).html(addCommas(json.venta));
                        $(api.column(4).footer()).html(addCommas(json.total));
                        $(api.column(5).footer()).html(addCommas(json.numero_vivienda));
                        showChart(json);
                    });
                }
            });
            table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
        }
        function showMap(dataMap) {
            var min = Math.min.apply(null, dataMap.map(x => x.value));
            var max = Math.max.apply(null, dataMap.map(x => x.value));
            $.get('../js/maps/' + clave_nacional + '.json', function (mxJson) {
                echarts.registerMap('mx', mxJson);
                var map = echarts.init($('#map')[0]);
                map.setOption({
                    tooltip: tooltip,
                    visualMap: {
                        min: min,
                        max: max,
                        left: 'left',
                        top: 'bottom',
                        text: ['max', 'min'],
                        inRange: {
                            color: rangeColor
                        },
                        calculable: true
                    },
                    toolbox: toolbox,
                    series: [{
                        name: clave_nacional,
                        type: 'map',
                        map: 'mx',
                        aspectScale: 1.0,
                        label: {
                            emphasis: {
                                show: false
                            }
                        },
                        itemStyle: {
                            emphasis: {
                                areaColor: '#f7aa43',

                            }
                        },
                        data: dataMap
                    }]
                });
                map.on('click', function (params) {
                    var clave_estado = params.data.id;
                    var nombre_estado = params.data.name;
                    changeTitle(nombre_estado);
                    createHousingDias2(clave_estado);
                    $('#mdl').modal();
                });
                //Responsive
                $(window).on('resize', function () {
                    map.resize();
                });
            });
        }
        function showChart(json) {
            //Crear objetos dinamicos var obj = JSON.parse(text);
            var legend1 = 'Registro';
            var registro = { 'name': legend1, 'value': json.registro }
            var legend2 = 'Construcción';
            var construccion = { 'name': legend2, 'value': json.construccion }
            var legend3 = 'Venta';
            var venta = { 'name': legend3, 'value': json.venta }
            var chart = echarts.init($('#chart')[0]);
            chart.setOption({
                color: baseColor,
                toolbox: toolbox2,
                tooltip: tooltip2,
                legend: {
                    orient: 'vertical',
                    left: 0,
                    bottom: 0,
                    data: [registro.name, construccion.name, venta.name]
                },
                series: [
                    {
                        name: 'Dias de Inventario',
                        type: 'pie',
                        center: ['50%', '50%'],
                        label: {
                            normal: {
                                formatter: '{d}%'
                            }
                        },
                        data: [registro, construccion, venta]
                    }
                ]
            });
            //Responsive
            $(window).on('resize', function () {
                chart.resize();
            });
        }

        function createHousingDias2(clave_estado) {
            var anio = $('[id$=ddl_anio]').val();
            var trimestre = $('[id$=ddl_trimestre]').val();
            $.getJSON(path + 'OfertaAPI/GetInventarioMunicipal/' + anio + '/' + trimestre + '/' + clave_estado + '/' + 1, function (data) {
                var columns = [
                    { 'data': 'municipio' },
                    { 'data': 'registro', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'construccion', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'venta', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'total', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'numero_vivienda', render: function (data, type, row) { return addCommas(data); } }
                ];
                var dataMap = data.map(x => ({ name: x.municipio, value: x.total }));
                showTable2(data, columns, clave_estado);
            });
            $.getJSON(path + 'OfertaAPI/GetInventarioMunicipal/' + anio + '/' + trimestre + '/' + clave_estado + '/' + 0, function (data) {
                var columns = [
                    { 'data': 'municipio' },
                    { 'data': 'registro', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'construccion', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'venta', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'total', render: function (data, type, row) { return addCommas(data); } },
                    { 'data': 'numero_vivienda', render: function (data, type, row) { return addCommas(data); } }
                ];
                var dataMap = data.map(x => ({ name: x.municipio, value: x.total }));
                showMap2(dataMap, clave_estado);
            });
        }
        function showTable2(data, columns, clave_estado) {
            var anio = $('[id$=ddl_anio]').val();
            var trimestre = $('[id$=ddl_trimestre]').val();
            var table = $('#table2').DataTable({
                data: data,
                columns: columns,
                destroy: true,
                scrollY: '250px',
                scrollCollapse: true,
                paging: false,
                info: false,
                buttons: buttons,
                scrollX: true,
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };

                    $.getJSON(path + 'OfertaAPI/GetTotalInventarioMunicipal/' + anio + '/' + trimestre + '/' + clave_estado, function (json) {
                        $(api.column(1).footer()).html(addCommas(json.registro));
                        $(api.column(2).footer()).html(addCommas(json.construccion));
                        $(api.column(3).footer()).html(addCommas(json.venta));
                        $(api.column(4).footer()).html(addCommas(json.total));
                        $(api.column(5).footer()).html(addCommas(json.numero_vivienda));
                        showChart2(json);
                    });
                }
            });
            table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));
        }
        function showMap2(dataMap, clave_estado) {
            var min = Math.min.apply(null, dataMap.map(x => x.value));
            var max = Math.max.apply(null, dataMap.map(x => x.value));
            $.get('../js/maps/' + clave_estado + '.json', function (geoJson) {
                echarts.registerMap(clave_estado, geoJson);
                var map = echarts.init($('#map2')[0]);
                map.setOption({
                    tooltip: tooltip,
                    visualMap: {
                        min: min,
                        max: max,
                        left: 'left',
                        top: 'bottom',
                        text: ['max', 'min'],
                        inRange: {
                            color: rangeColor
                        },
                        calculable: true
                    },
                    toolbox: toolbox,
                    series: [{
                        name: clave_estado,
                        type: 'map',
                        map: clave_estado,
                        aspectScale: 1.0,
                        roam: true,
                        label: {
                            emphasis: {
                                show: false
                            }
                        },
                        itemStyle: {
                            emphasis: {
                                areaColor: '#f7aa43',

                            }
                        },
                        data: dataMap
                    }]
                });
                //Responsive
                $(window).on('resize', function () {
                    map.resize();
                });
            });
        }
        function showChart2(json) {
            //Crear objetos dinamicos var obj = JSON.parse(text);
            var legend1 = 'Registro';
            var registro = { 'name': legend1, 'value': json.registro }
            var legend2 = 'Construcción';
            var construccion = { 'name': legend2, 'value': json.construccion }
            var legend3 = 'Venta';
            var venta = { 'name': legend3, 'value': json.venta }
            var chart = echarts.init($('#chart2')[0]);
            chart.setOption({
                color: baseColor,
                toolbox: toolbox2,
                tooltip: tooltip2,
                legend: {
                    orient: 'vertical',
                    left: 0,
                    bottom: 0,
                    data: [registro.name, construccion.name, venta.name]
                },
                series: [
                    {
                        name: 'Días de Inventario',
                        type: 'pie',
                        center: ['50%', '50%'],
                        label: {
                            normal: {
                                formatter: '{d}%'
                            }
                        },
                        data: [registro, construccion, venta]
                    }
                ]
            });
            //Responsive
            $(window).on('resize', function () {
                chart.resize();
            });
        }
    </script>
}

<div class="page-header">
    <h2>Días de Inventario</h2>
</div>

<div id="div-form" class="form-inline">
    <div class="form-group">
        <label>Año:</label>
        @Html.DropDownList("ddl_anio", anios, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Mes:</label>
        @Html.DropDownList("ddl_trimestre", trimestres, new { @class = "form-control" })
    </div>
    
</div>

<div class="row">
    <div class="col-md-5">
        <div id="map"></div>
        <br />
        <div id="chart"></div>
    </div>
    <div class="col-md-7">
        <table id="table" class="table table-striped table-hover" style="width: 100%">
            <thead>
                <tr>
                    <th>Estado</th>
                    <th>Registro</th>
                    <th>Construcción</th>
                    <th>Venta</th>
                    <th>Total</th>
                    <th>Número de viviendas</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Total</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<br />
<div id="info" class="row">
    <div class="col-md-12">
        <div class="panel-group" role="tablist">
            <div class="panel panel-info">
                <div class="panel-heading" role="tab" id="collapseListGroupHeading1">
                    <h4 class="panel-title">
                        <a href="#collapseListGroup1" class="" role="button" data-toggle="collapse" aria-expanded="true" aria-controls="collapseListGroup1">
                            <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> Notas
                        </a>
                    </h4>
                </div>
                <div class="panel-collapse collapse in" role="tabpanel" id="collapseListGroup1" aria-labelledby="collapseListGroupHeading1" aria-expanded="true" style="">
                    <ul id="notes" class="list-group">
                        <li class="list-group-item"><strong>Registro: </strong>Corresponde a la diferencia promedio en días entre la fecha de Inicio de Verificación y la fecha de Registro en RUV de cada vivienda observada</li>
                        <li class="list-group-item"><strong>Construcción: </strong>Corresponde a la diferencia promedio en días entre la fecha de obtención del Dictamen de Habitabilidad y la fecha de Inicio de Verificación de cada vivienda observada</li>
                        <li class="list-group-item"><strong>Venta: </strong>Corresponde a la diferencia promedio en días entre la fecha de Pago y la fecha de la fecha de obtención del Dictamen de Habitabilidad de cada vivienda observada</li>
                        <li class="list-group-item"><strong>Total: </strong>Corresponde a la diferencia promedio en días entre la fecha de Pago y la fecha de Registro en RUV de cada vivienda observada</li>
                        <li class="list-group-item"><p class="text-info"><strong>Fuente: </strong>Elaborado con datos de CONAVI, INFONAVIT, FOVISSSTE y RUV</p></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<!-- fade -->
<div id="mdl" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="lbl_titulo">Modal title</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div id="map2"></div>
                    </div>
                    <div class="col-md-6">
                        <div id="chart2"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <table id="table2" class="table table-striped table-hover" style="width: 100%">
                            <thead>
                                <tr>
                                    <th>Municipio</th>
                                    <th>Registro</th>
                                    <th>Construcción</th>
                                    <th>Venta</th>
                                    <th>Total</th>
                                    <th>Número de Viviendas</th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Total</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Salir</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
